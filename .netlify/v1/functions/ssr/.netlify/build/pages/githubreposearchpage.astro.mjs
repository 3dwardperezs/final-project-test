/* empty css                                       */
import { a as createComponent, r as renderTemplate, d as renderComponent, m as maybeRenderHead } from '../chunks/astro/server_b09etzCd.mjs';
import { c as create_ssr_component, a as add_attribute, e as each, b as escape, $ as $$Layout } from '../chunks/Layout_D8eZ86Ov.mjs';
export { renderers } from '../renderers.mjs';

/* C:/Users/ED/Documents/final-project-test/src/components/GithubRepoSearch.svelte generated by Svelte v4.2.18 */

const GithubRepoSearch = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let query = '';
	let repositories = [];

	return ` <form class="flex-max-w-lg mx-auto p-4 bg-white shadow-md rounded-lg mb-6"><div class="flex"><input type="search" class="placeholder:italic placeholder:text-slate-400 bg-white border border-slate-300 rounded-md py-2 pl-3 pr-3 shadow-sm focus:outline-none focus:border-sky-500 focus:ring-sky-500 focus:ring-1 sm:text-sm flex-grow" placeholder="Search for repositories..." required${add_attribute("value", query, 0)}> <button type="submit" ${""} class="ml-2 bg-blue-500 text-white rounded-md py-2 px-4 shadow-sm hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 sm:text-sm">Search</button></div></form> <div class="items-center" data-svelte-h="svelte-a3g1vp"><img src="/logoGitHub.webp" alt="404 Image" class="mx-auto mb-6 w-2/2 max-w-xs"></div>  ${``}  ${``}  <ul class="flex-max-w-lg mx-auto">${each(repositories, repo => {
		return `<li class="bg-white p-4 mb-4 shadow-md rounded-lg"><strong class="block text-xl">${escape(repo.name)}</strong> <p class="text-gray-700">${escape(repo.description)}</p> <div class="flex justify-between text-sm mt-2"><span>⭐ ${escape(repo.stargazers_count)}</span> <span>🍴 ${escape(repo.forks_count)}</span> <span>🐛 ${escape(repo.open_issues_count)}</span></div> </li>`;
	})}</ul>`;
});

const $$GithubRepoSearchPage = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Terms Of Service" }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<h1 class="text-3xl font-bold text-center my-8 text-white">GitHub Repository Explorer</h1>  ${renderComponent($$result2, "GithubRepoSearch", GithubRepoSearch, { "client:load": true, "client:component-hydration": "load", "client:component-path": "@components/GithubRepoSearch.svelte", "client:component-export": "default" })} ` })}`;
}, "C:/Users/ED/Documents/final-project-test/src/pages/GithubRepoSearchPage.astro", void 0);

const $$file = "C:/Users/ED/Documents/final-project-test/src/pages/GithubRepoSearchPage.astro";
const $$url = "/final-project-test/GithubRepoSearchPage";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$GithubRepoSearchPage,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
